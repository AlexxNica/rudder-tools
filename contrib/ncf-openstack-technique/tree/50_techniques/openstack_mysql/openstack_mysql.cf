# @name openstack_mysql
# @description Install, configure and ensure MySQL/MariaDB is running. Uses a template file for configuration.
# @version 0.1

bundle agent openstack_mysql
{
  methods:
    "method_call" usebundle => data_load("${this.bundle}"),
      ifvarclass => concat("any");
    "method_call" usebundle => package_install("mariadb"),
      ifvarclass => concat("any");
    "method_call" usebundle => package_install("mariadb-server"),
      ifvarclass => concat("any");
    "method_call" usebundle => package_install("MySQL-python"),
      ifvarclass => concat("any");
    "method_call" usebundle => file_from_template_mustache_data("${variable_string.${this.bundle}_technique_path}/templates/mariadb_openstack.cnf.tpl", "/etc/my.cnf.d/mariadb_openstack.cnf", "data_merge.${this.bundle}"),
      ifvarclass => concat("any");
    "method_call" usebundle => command_execution("sh ${variable_string.${this.bundle}_technique_path}/scripts/mysql_secure_installation.sh \"`echo '${data_json.${this.bundle}}' | jq -r '.root_password'`\""),
      ifvarclass => concat("any.package_install_mariadb_repaired");
    "create_users" usebundle  => command_execution("sh ${variable_string.${this.bundle}_technique_path}/scripts/init_database_component.sh \"`echo '${data_json.${this.bundle}}' | jq -r '.'`\""),
      ifvarclass => concat("any");
    "method_call" usebundle => service_restart("mariadb"),
      ifvarclass => concat("any.file_from_template_mustache_data__etc_my_cnf_d_mariadb_openstack_cnf_repaired");
    "method_call" usebundle => service_ensure_running("mariadb"),
      ifvarclass => concat("any");
}
